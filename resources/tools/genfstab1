#!/usr/bin/env bash
# mini-genfstab-uuid : generate fstab lines using UUID=â€¦ identifiers
# usage:  mini-genfstab-uuid <root-mountpoint>

set -euo pipefail

root=$(realpath -m "${1:?need a root mountpoint}")
mountpoint -q "$root" || { echo "$root is not a mountpoint" >&2; exit 1; }

# pseudo-filesystems we never want in fstab
pseudofs='^(proc|sysfs|devtmpfs|devpts|tmpfs|cgroup|cgroup2|bpf|mqueue|pstore|\
securityfs|hugetlbfs|rpc_pipefs|autofs|debugfs|configfs)$'

uuid_for() { blkid -o value -s UUID "$1" 2>/dev/null || true; }

findmnt -n -r -o SOURCE,TARGET,FSTYPE,OPTIONS |
while read -r src tgt fstype opts; do
    [[ $tgt == $root* ]]                || continue      # under requested root
    [[ $fstype =~ $pseudofs ]]          && continue      # skip pseudo fs

    rel_tgt=${tgt#$root}; [[ $rel_tgt ]] || rel_tgt=/

    id=$src
    if [[ $src == /dev/* ]]; then
        if uuid=$(uuid_for "$src"); [[ $uuid ]]; then
            id="UUID=$uuid"                                # prefer UUID
        fi
    fi

    pass=2; [[ $tgt == "$root" ]] && pass=1                # root gets pass 1
    printf '%-37s %-15s %-7s %-20s 0 %d\n' \
           "$id" "$rel_tgt" "$fstype" "$opts" "$pass"
done

# active swap areas
{
  read                                                    # skip header
  while read -r dev _ _ _ prio; do
    [[ $dev == *'(deleted)' ]] && continue

    if [[ $dev == /dev/* ]]; then
        if uuid=$(uuid_for "$dev"); [[ $uuid ]]; then
            dev="UUID=$uuid"
        fi
    fi

    opts=defaults; (( prio >= 0 )) && opts+=",pri=$prio"
    printf '%-37s none swap %-12s 0 0\n' "$dev" "$opts"
  done
} < /proc/swaps
